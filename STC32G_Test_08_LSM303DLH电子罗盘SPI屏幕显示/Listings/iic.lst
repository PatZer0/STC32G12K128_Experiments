C251 COMPILER V5.60.0,  iic                                                                05/04/24  17:23:40  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE iic
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Internals\iic.c XSMALL INTR2 BROWSE INCDIR(.\Internals;.\Externals) DE
                    -BUG PRINT(.\Listings\iic.lst) TABS(2) OBJECT(.\Objects\iic.obj) 

stmt  level    source

    1          #include "iic.h"
    2          #include <STC32G.H>
    3          
    4          //========================================================================
    5          // 函数名称: IIC_Init
    6          // 函数功能: IIC初始化
    7          // 入口参数: 无
    8          // 函数返回: 无
    9          // 当前版本: VER1.0
   10          // 修改日期: 2023 - 6 - 7
   11          // 当前作者: ZCF
   12          // 其他备注: 
   13          //========================================================================
   14          void IIC_Init()       //IIC初始化
   15          {
   16   1          I2C_S1 =2;              //I2C功能脚选择，00:P1.5,P1.4; 01:P2.5,P2.4; 11:P3.2,P3.3
   17   1          I2C_S0 =1;
   18   1          I2CCFG = 0XE0;      //设置速度和使能IIC
   19   1          I2CMSST = 0;      //清空主机状态
   20   1      }
   21          
   22          //========================================================================
   23          // 函数名称: IIC_DELAY
   24          // 函数功能: IIC等待结束
   25          // 入口参数: 无
   26          // 函数返回: 无
   27          // 当前版本: VER1.0
   28          // 修改日期: 2023 - 6 - 7
   29          // 当前作者: ZCF
   30          // 其他备注: 
   31          //========================================================================
   32          void IIC_DELAY()  
   33          {
   34   1          while( !(I2CMSST & 0X40) );
   35   1          I2CMSST &= (~0X40);
   36   1      }
   37          
   38          //========================================================================
   39          // 函数名称: IIC_START
   40          // 函数功能: IIC开始
   41          // 入口参数: 无
   42          // 函数返回: 无
   43          // 当前版本: VER1.0
   44          // 修改日期: 2023 - 6 - 7
   45          // 当前作者: ZCF
   46          // 其他备注: 
   47          //========================================================================
   48          void IIC_START(void)  //IIC开始
   49          {
   50   1          I2CMSCR = 0X01;     //开始命令
   51   1          IIC_DELAY();      //等待结束
   52   1      }
   53          
   54          //========================================================================
   55          // 函数名称: IIC_STOP
   56          // 函数功能: IIC结束
   57          // 入口参数: 无
   58          // 函数返回: 无
C251 COMPILER V5.60.0,  iic                                                                05/04/24  17:23:40  PAGE 2   

   59          // 当前版本: VER1.0
   60          // 修改日期: 2023 - 6 - 7
   61          // 当前作者: ZCF
   62          // 其他备注: 
   63          //========================================================================
   64          void IIC_STOP(void)   //IIC结束
   65          {
   66   1          I2CMSCR = 0X06;     //结束命令
   67   1          IIC_DELAY();
   68   1      }
   69          
   70          //========================================================================
   71          // 函数名称: IIC_SENDACK
   72          // 函数功能: IIC发送ACK
   73          // 入口参数: 无
   74          // 函数返回: 无
   75          // 当前版本: VER1.0
   76          // 修改日期: 2023 - 6 - 7
   77          // 当前作者: ZCF
   78          // 其他备注: 
   79          //========================================================================
   80          void IIC_SENDACK(void)  //发送ACK
   81          {
   82   1          I2CMSST = 0X00;     //发送aCK
   83   1          I2CMSCR = 0X05;     //aCK命令
   84   1          IIC_DELAY();
   85   1      }
   86          
   87          //========================================================================
   88          // 函数名称: IIC_SENDNACK
   89          // 函数功能: IIC发送NACK
   90          // 入口参数: 无
   91          // 函数返回: 无
   92          // 当前版本: VER1.0
   93          // 修改日期: 2023 - 6 - 7
   94          // 当前作者: ZCF
   95          // 其他备注: 
   96          //========================================================================
   97          void IIC_SENDNACK(void) //发送NACK
   98          {
   99   1          I2CMSST = 0X01;     //发送naCK
  100   1          I2CMSCR = 0X05;     //aCK命令
  101   1          IIC_DELAY();
  102   1      }
  103          
  104          //========================================================================
  105          // 函数名称: IIC_WAITACK
  106          // 函数功能: IIC等到从机ACK
  107          // 入口参数: 无
  108          // 函数返回: 无
  109          // 当前版本: VER1.0
  110          // 修改日期: 2023 - 6 - 7
  111          // 当前作者: ZCF
  112          // 其他备注: 
  113          //========================================================================
  114          void IIC_WAITACK(void)  //等到从机ACK
  115          {
  116   1          I2CMSCR = 0X03;     //接收aCK
  117   1          IIC_DELAY();
  118   1      }
  119          
  120          //========================================================================
  121          // 函数名称: IIC_SENDBYTE
  122          // 函数功能: IIC发送一个字节
  123          // 入口参数: @dat：发送的数据
  124          // 函数返回: 无
C251 COMPILER V5.60.0,  iic                                                                05/04/24  17:23:40  PAGE 3   

  125          // 当前版本: VER1.0
  126          // 修改日期: 2023 - 6 - 7
  127          // 当前作者: ZCF
  128          // 其他备注: 
  129          //========================================================================
  130          void IIC_SENDBYTE(unsigned char dat)  //发送一个字节
  131          {
  132   1          I2CTXD = dat;     //发送的数据写入寄存器
  133   1          I2CMSCR = 0X02;     //发送
  134   1          IIC_DELAY();
  135   1      }
  136          
  137          //========================================================================
  138          // 函数名称: IIC_READBYTE
  139          // 函数功能: IIC读取一个字节
  140          // 入口参数: 无
  141          // 函数返回: 读到的数据
  142          // 当前版本: VER1.0
  143          // 修改日期: 2023 - 6 - 7
  144          // 当前作者: ZCF
  145          // 其他备注: 
  146          //========================================================================
  147          unsigned char IIC_READBYTE(void)  //读取一个字节
  148          {
  149   1          I2CMSCR = 0X04;     //发送
  150   1          IIC_DELAY();    
  151   1          return I2CRXD;
  152   1      }
  153          
  154          
  155          
  156          //========================================================================
  157          // 函数名称: IIC_Write_NByte
  158          // 函数功能: IIC连续写入几个字节
  159          // 入口参数: @slave：从机地址  @addr：数据地址  @p:数组   @number：数据个数
  160          // 函数返回: 读到的数据
  161          // 当前版本: VER1.0
  162          // 修改日期: 2023 - 6 - 7
  163          // 当前作者: ZCF
  164          // 其他备注: 
  165          //========================================================================
  166          void IIC_Write_NByte( unsigned char slave,unsigned char addr,unsigned char *p,unsigned char number )  //ii
             -c写入连续的几个字节
  167          {
  168   1          IIC_START();
  169   1          IIC_SENDBYTE(slave);
  170   1          IIC_WAITACK();
  171   1      
  172   1          IIC_SENDBYTE(addr);
  173   1          IIC_WAITACK();
  174   1      
  175   1          do
  176   1          {
  177   2              IIC_SENDBYTE(*p);
  178   2              p++;
  179   2              IIC_WAITACK();
  180   2      
  181   2          }
  182   1          while(--number);
  183   1          IIC_STOP();
  184   1      }
  185          
  186          //========================================================================
  187          // 函数名称: IIC_Read_NByte
  188          // 函数功能: IIC连续读取几个字节
  189          // 入口参数: @slave：从机地址  @addr：数据地址  @p:数组   @number：数据个数
C251 COMPILER V5.60.0,  iic                                                                05/04/24  17:23:40  PAGE 4   

  190          // 函数返回: 读到的数据
  191          // 当前版本: VER1.0
  192          // 修改日期: 2023 - 6 - 7
  193          // 当前作者: ZCF
  194          // 其他备注: 
  195          //========================================================================
  196          void IIC_Read_NByte( unsigned char slave,unsigned char addr,unsigned char *p,unsigned char number ) //iic
             -读取连续的几个字节
  197          {
  198   1          IIC_START();
  199   1          IIC_SENDBYTE(slave);
  200   1          IIC_WAITACK();
  201   1      
  202   1          IIC_SENDBYTE(addr);
  203   1          IIC_WAITACK();
  204   1      
  205   1          IIC_START();
  206   1          IIC_SENDBYTE((unsigned char)(slave+0x01));  
  207   1          IIC_WAITACK();
  208   1      
  209   1          do
  210   1          {
  211   2              *p = IIC_READBYTE();  //P[0] => P[1]
  212   2              p++;
  213   2              if( number!=1 )
  214   2                  IIC_SENDACK();
  215   2          }
  216   1          while(--number);
  217   1          IIC_SENDNACK();
  218   1          IIC_STOP(); 
  219   1      }
  220          
  221            


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       359     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------          6
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
