C251 COMPILER V5.60.0,  iic                                                                06/04/24  15:56:48  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE iic
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Internals\iic.c XSMALL INTR2 BROWSE INCDIR(.\Internals;.\Externals) DE
                    -BUG PRINT(.\Listings\iic.lst) TABS(2) OBJECT(.\Objects\iic.obj) 

stmt  level    source

    1          #include "iic.h"
    2          #include <STC32G.H>
    3          
    4          //========================================================================
    5          // 函数名称: IIC_Init
    6          // 函数功能: IIC初始化
    7          // 入口参数: 无
    8          // 函数返回: 无
    9          // 当前版本: VER1.0
   10          // 修改日期: 2023 - 6 - 7
   11          // 当前作者: ZCF
   12          // 其他备注: 
   13          //========================================================================
   14          void IIC_Init()       //IIC初始化
   15          {
   16   1          I2C_S1 =2;              //I2C功能脚选择，00:P1.5,P1.4; 01:P2.5,P2.4; 11:P3.2,P3.3
   17   1          I2C_S0 =1;
   18   1          I2CCFG = 0XC0 + 0x0D; //设置速度MSSPEED[5:0]和使能IIC    
   19   1          // I2C总线速度  = SYS_CLK / 2 / (MSSPEED * 2 + 4)
   20   1          // 0x13 = 19d，394257.37 Hz，约等于400kHz
   21   1          // 0x3A = 58d, 100kHz @ 24MHz
   22   1          I2CMSST = 0;      //清空主机状态
   23   1      }
   24          
   25          //========================================================================
   26          // 函数名称: IIC_DELAY
   27          // 函数功能: IIC等待结束
   28          // 入口参数: 无
   29          // 函数返回: 无
   30          // 当前版本: VER1.0
   31          // 修改日期: 2023 - 6 - 7
   32          // 当前作者: ZCF
   33          // 其他备注: 
   34          //========================================================================
   35          void IIC_DELAY()  
   36          {
   37   1          while( !(I2CMSST & 0X40) );
   38   1          I2CMSST &= (~0X40);
   39   1      }
   40          
   41          //========================================================================
   42          // 函数名称: IIC_START
   43          // 函数功能: IIC开始
   44          // 入口参数: 无
   45          // 函数返回: 无
   46          // 当前版本: VER1.0
   47          // 修改日期: 2023 - 6 - 7
   48          // 当前作者: ZCF
   49          // 其他备注: 
   50          //========================================================================
   51          void IIC_START(void)  //IIC开始
   52          {
   53   1          I2CMSCR = 0X01;     //开始命令
   54   1          IIC_DELAY();      //等待结束
   55   1      }
   56          
   57          //========================================================================
   58          // 函数名称: IIC_STOP
C251 COMPILER V5.60.0,  iic                                                                06/04/24  15:56:48  PAGE 2   

   59          // 函数功能: IIC结束
   60          // 入口参数: 无
   61          // 函数返回: 无
   62          // 当前版本: VER1.0
   63          // 修改日期: 2023 - 6 - 7
   64          // 当前作者: ZCF
   65          // 其他备注: 
   66          //========================================================================
   67          void IIC_STOP(void)   //IIC结束
   68          {
   69   1          I2CMSCR = 0X06;     //结束命令
   70   1          IIC_DELAY();
   71   1      }
   72          
   73          //========================================================================
   74          // 函数名称: IIC_SENDACK
   75          // 函数功能: IIC发送ACK
   76          // 入口参数: 无
   77          // 函数返回: 无
   78          // 当前版本: VER1.0
   79          // 修改日期: 2023 - 6 - 7
   80          // 当前作者: ZCF
   81          // 其他备注: 
   82          //========================================================================
   83          void IIC_SENDACK(void)  //发送ACK
   84          {
   85   1          I2CMSST = 0X00;     //发送aCK
   86   1          I2CMSCR = 0X05;     //aCK命令
   87   1          IIC_DELAY();
   88   1      }
   89          
   90          //========================================================================
   91          // 函数名称: IIC_SENDNACK
   92          // 函数功能: IIC发送NACK
   93          // 入口参数: 无
   94          // 函数返回: 无
   95          // 当前版本: VER1.0
   96          // 修改日期: 2023 - 6 - 7
   97          // 当前作者: ZCF
   98          // 其他备注: 
   99          //========================================================================
  100          void IIC_SENDNACK(void) //发送NACK
  101          {
  102   1          I2CMSST = 0X01;     //发送naCK
  103   1          I2CMSCR = 0X05;     //aCK命令
  104   1          IIC_DELAY();
  105   1      }
  106          
  107          //========================================================================
  108          // 函数名称: IIC_WAITACK
  109          // 函数功能: IIC等到从机ACK
  110          // 入口参数: 无
  111          // 函数返回: 无
  112          // 当前版本: VER1.0
  113          // 修改日期: 2023 - 6 - 7
  114          // 当前作者: ZCF
  115          // 其他备注: 
  116          //========================================================================
  117          void IIC_WAITACK(void)  //等到从机ACK
  118          {
  119   1          I2CMSCR = 0X03;     //接收aCK
  120   1          IIC_DELAY();
  121   1      }
  122          
  123          //========================================================================
  124          // 函数名称: IIC_SENDBYTE
C251 COMPILER V5.60.0,  iic                                                                06/04/24  15:56:48  PAGE 3   

  125          // 函数功能: IIC发送一个字节
  126          // 入口参数: @dat：发送的数据
  127          // 函数返回: 无
  128          // 当前版本: VER1.0
  129          // 修改日期: 2023 - 6 - 7
  130          // 当前作者: ZCF
  131          // 其他备注: 
  132          //========================================================================
  133          void IIC_SENDBYTE(unsigned char dat)  //发送一个字节
  134          {
  135   1          I2CTXD = dat;     //发送的数据写入寄存器
  136   1          I2CMSCR = 0X02;     //发送
  137   1          IIC_DELAY();
  138   1      }
  139          
  140          //========================================================================
  141          // 函数名称: IIC_READBYTE
  142          // 函数功能: IIC读取一个字节
  143          // 入口参数: 无
  144          // 函数返回: 读到的数据
  145          // 当前版本: VER1.0
  146          // 修改日期: 2023 - 6 - 7
  147          // 当前作者: ZCF
  148          // 其他备注: 
  149          //========================================================================
  150          unsigned char IIC_READBYTE(void)  //读取一个字节
  151          {
  152   1          I2CMSCR = 0X04;     //发送
  153   1          IIC_DELAY();
  154   1          return I2CRXD;
  155   1      }
  156          
  157          
  158          //========================================================================
  159          // 函数名称: IIC_Write_NByte
  160          // 函数功能: IIC连续写入几个字节
  161          // 入口参数: @slave：从机地址  @addr：数据地址  @p:数组   @number：数据个数
  162          // 函数返回: 读到的数据
  163          // 当前版本: VER1.0
  164          // 修改日期: 2023 - 6 - 7
  165          // 当前作者: ZCF
  166          // 其他备注: 
  167          //========================================================================
  168          void IIC_Write_NByte( unsigned char slave,unsigned char addr,unsigned char *p,unsigned char number )  //ii
             -c写入连续的几个字节
  169          {
  170   1          IIC_START();
  171   1          IIC_SENDBYTE(slave);
  172   1          IIC_WAITACK();
  173   1      
  174   1          IIC_SENDBYTE(addr);
  175   1          IIC_WAITACK();
  176   1      
  177   1          do
  178   1          {
  179   2              IIC_SENDBYTE(*p);
  180   2              p++;
  181   2              IIC_WAITACK();
  182   2      
  183   2          }
  184   1          while(--number);
  185   1          IIC_STOP();
  186   1      }
  187          
  188          //========================================================================
  189          // 函数名称: IIC_Read_NByte
C251 COMPILER V5.60.0,  iic                                                                06/04/24  15:56:48  PAGE 4   

  190          // 函数功能: IIC连续读取几个字节
  191          // 入口参数: @slave：从机地址  @addr：数据地址  @p:数组   @number：数据个数
  192          // 函数返回: 读到的数据
  193          // 当前版本: VER1.0
  194          // 修改日期: 2023 - 6 - 7
  195          // 当前作者: ZCF
  196          // 其他备注: 
  197          //========================================================================
  198          void IIC_Read_NByte( unsigned char slave,unsigned char addr,unsigned char *p,unsigned char number ) //iic
             -读取连续的几个字节
  199          {
  200   1          IIC_START();
  201   1          IIC_SENDBYTE(slave);
  202   1          IIC_WAITACK();
  203   1      
  204   1          IIC_SENDBYTE(addr);
  205   1          IIC_WAITACK();
  206   1      
  207   1          IIC_START();
  208   1          IIC_SENDBYTE((unsigned char)(slave+0x01));  
  209   1          IIC_WAITACK();
  210   1      
  211   1          do
  212   1          {
  213   2              *p = IIC_READBYTE();  //P[0] => P[1]
  214   2              p++;
  215   2              if( number!=1 )
  216   2                  IIC_SENDACK();
  217   2          }
  218   1          while(--number);
  219   1          IIC_SENDNACK();
  220   1          IIC_STOP(); 
  221   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       359     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------          6
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
