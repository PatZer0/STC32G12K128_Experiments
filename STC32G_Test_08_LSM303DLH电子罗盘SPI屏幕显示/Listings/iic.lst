C251 COMPILER V5.60.0,  iic                                                                06/04/24  15:09:00  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE iic
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Internals\iic.c XSMALL INTR2 BROWSE INCDIR(.\Internals;.\Externals) DE
                    -BUG PRINT(.\Listings\iic.lst) TABS(2) OBJECT(.\Objects\iic.obj) 

stmt  level    source

    1          #include "iic.h"
    2          #include <STC32G.H>
    3          
    4          //========================================================================
    5          // 函数名称: IIC_Init
    6          // 函数功能: IIC初始化
    7          // 入口参数: 无
    8          // 函数返回: 无
    9          // 当前版本: VER1.0
   10          // 修改日期: 2023 - 6 - 7
   11          // 当前作者: ZCF
   12          // 其他备注: 
   13          //========================================================================
   14          void IIC_Init()       //IIC初始化
   15          {
   16   1          I2C_S1 =2;              //I2C功能脚选择，00:P1.5,P1.4; 01:P2.5,P2.4; 11:P3.2,P3.3
   17   1          I2C_S0 =1;
   18   1          I2CCFG = 0XC0 + 0x13; //设置速度MSSPEED[5:0]和使能IIC    
   19   1          // I2C总线速度  = SYS_CLK / 2 / (MSSPEED * 2 + 4)
   20   1          // 0x13 = 19d，394257.37 Hz，约等于400kHz
   21   1          I2CMSST = 0;      //清空主机状态
   22   1      }
   23          
   24          //========================================================================
   25          // 函数名称: IIC_DELAY
   26          // 函数功能: IIC等待结束
   27          // 入口参数: 无
   28          // 函数返回: 无
   29          // 当前版本: VER1.0
   30          // 修改日期: 2023 - 6 - 7
   31          // 当前作者: ZCF
   32          // 其他备注: 
   33          //========================================================================
   34          void IIC_DELAY()  
   35          {
   36   1          while( !(I2CMSST & 0X40) );
   37   1          I2CMSST &= (~0X40);
   38   1      }
   39          
   40          //========================================================================
   41          // 函数名称: IIC_START
   42          // 函数功能: IIC开始
   43          // 入口参数: 无
   44          // 函数返回: 无
   45          // 当前版本: VER1.0
   46          // 修改日期: 2023 - 6 - 7
   47          // 当前作者: ZCF
   48          // 其他备注: 
   49          //========================================================================
   50          void IIC_START(void)  //IIC开始
   51          {
   52   1          I2CMSCR = 0X01;     //开始命令
   53   1          IIC_DELAY();      //等待结束
   54   1      }
   55          
   56          //========================================================================
   57          // 函数名称: IIC_STOP
   58          // 函数功能: IIC结束
C251 COMPILER V5.60.0,  iic                                                                06/04/24  15:09:00  PAGE 2   

   59          // 入口参数: 无
   60          // 函数返回: 无
   61          // 当前版本: VER1.0
   62          // 修改日期: 2023 - 6 - 7
   63          // 当前作者: ZCF
   64          // 其他备注: 
   65          //========================================================================
   66          void IIC_STOP(void)   //IIC结束
   67          {
   68   1          I2CMSCR = 0X06;     //结束命令
   69   1          IIC_DELAY();
   70   1      }
   71          
   72          //========================================================================
   73          // 函数名称: IIC_SENDACK
   74          // 函数功能: IIC发送ACK
   75          // 入口参数: 无
   76          // 函数返回: 无
   77          // 当前版本: VER1.0
   78          // 修改日期: 2023 - 6 - 7
   79          // 当前作者: ZCF
   80          // 其他备注: 
   81          //========================================================================
   82          void IIC_SENDACK(void)  //发送ACK
   83          {
   84   1          I2CMSST = 0X00;     //发送aCK
   85   1          I2CMSCR = 0X05;     //aCK命令
   86   1          IIC_DELAY();
   87   1      }
   88          
   89          //========================================================================
   90          // 函数名称: IIC_SENDNACK
   91          // 函数功能: IIC发送NACK
   92          // 入口参数: 无
   93          // 函数返回: 无
   94          // 当前版本: VER1.0
   95          // 修改日期: 2023 - 6 - 7
   96          // 当前作者: ZCF
   97          // 其他备注: 
   98          //========================================================================
   99          void IIC_SENDNACK(void) //发送NACK
  100          {
  101   1          I2CMSST = 0X01;     //发送naCK
  102   1          I2CMSCR = 0X05;     //aCK命令
  103   1          IIC_DELAY();
  104   1      }
  105          
  106          //========================================================================
  107          // 函数名称: IIC_WAITACK
  108          // 函数功能: IIC等到从机ACK
  109          // 入口参数: 无
  110          // 函数返回: 无
  111          // 当前版本: VER1.0
  112          // 修改日期: 2023 - 6 - 7
  113          // 当前作者: ZCF
  114          // 其他备注: 
  115          //========================================================================
  116          void IIC_WAITACK(void)  //等到从机ACK
  117          {
  118   1          I2CMSCR = 0X03;     //接收aCK
  119   1          IIC_DELAY();
  120   1      }
  121          
  122          //========================================================================
  123          // 函数名称: IIC_SENDBYTE
  124          // 函数功能: IIC发送一个字节
C251 COMPILER V5.60.0,  iic                                                                06/04/24  15:09:00  PAGE 3   

  125          // 入口参数: @dat：发送的数据
  126          // 函数返回: 无
  127          // 当前版本: VER1.0
  128          // 修改日期: 2023 - 6 - 7
  129          // 当前作者: ZCF
  130          // 其他备注: 
  131          //========================================================================
  132          void IIC_SENDBYTE(unsigned char dat)  //发送一个字节
  133          {
  134   1          I2CTXD = dat;     //发送的数据写入寄存器
  135   1          I2CMSCR = 0X02;     //发送
  136   1          IIC_DELAY();
  137   1      }
  138          
  139          //========================================================================
  140          // 函数名称: IIC_READBYTE
  141          // 函数功能: IIC读取一个字节
  142          // 入口参数: 无
  143          // 函数返回: 读到的数据
  144          // 当前版本: VER1.0
  145          // 修改日期: 2023 - 6 - 7
  146          // 当前作者: ZCF
  147          // 其他备注: 
  148          //========================================================================
  149          unsigned char IIC_READBYTE(void)  //读取一个字节
  150          {
  151   1          I2CMSCR = 0X04;     //发送
  152   1          IIC_DELAY();
  153   1          return I2CRXD;
  154   1      }
  155          
  156          
  157          //========================================================================
  158          // 函数名称: IIC_Write_NByte
  159          // 函数功能: IIC连续写入几个字节
  160          // 入口参数: @slave：从机地址  @addr：数据地址  @p:数组   @number：数据个数
  161          // 函数返回: 读到的数据
  162          // 当前版本: VER1.0
  163          // 修改日期: 2023 - 6 - 7
  164          // 当前作者: ZCF
  165          // 其他备注: 
  166          //========================================================================
  167          void IIC_Write_NByte( unsigned char slave,unsigned char addr,unsigned char *p,unsigned char number )  //ii
             -c写入连续的几个字节
  168          {
  169   1          IIC_START();
  170   1          IIC_SENDBYTE(slave);
  171   1          IIC_WAITACK();
  172   1      
  173   1          IIC_SENDBYTE(addr);
  174   1          IIC_WAITACK();
  175   1      
  176   1          do
  177   1          {
  178   2              IIC_SENDBYTE(*p);
  179   2              p++;
  180   2              IIC_WAITACK();
  181   2      
  182   2          }
  183   1          while(--number);
  184   1          IIC_STOP();
  185   1      }
  186          
  187          //========================================================================
  188          // 函数名称: IIC_Read_NByte
  189          // 函数功能: IIC连续读取几个字节
C251 COMPILER V5.60.0,  iic                                                                06/04/24  15:09:00  PAGE 4   

  190          // 入口参数: @slave：从机地址  @addr：数据地址  @p:数组   @number：数据个数
  191          // 函数返回: 读到的数据
  192          // 当前版本: VER1.0
  193          // 修改日期: 2023 - 6 - 7
  194          // 当前作者: ZCF
  195          // 其他备注: 
  196          //========================================================================
  197          void IIC_Read_NByte( unsigned char slave,unsigned char addr,unsigned char *p,unsigned char number ) //iic
             -读取连续的几个字节
  198          {
  199   1          IIC_START();
  200   1          IIC_SENDBYTE(slave);
  201   1          IIC_WAITACK();
  202   1      
  203   1          IIC_SENDBYTE(addr);
  204   1          IIC_WAITACK();
  205   1      
  206   1          IIC_START();
  207   1          IIC_SENDBYTE((unsigned char)(slave+0x01));  
  208   1          IIC_WAITACK();
  209   1      
  210   1          do
  211   1          {
  212   2              *p = IIC_READBYTE();  //P[0] => P[1]
  213   2              p++;
  214   2              if( number!=1 )
  215   2                  IIC_SENDACK();
  216   2          }
  217   1          while(--number);
  218   1          IIC_SENDNACK();
  219   1          IIC_STOP(); 
  220   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       359     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------          6
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
